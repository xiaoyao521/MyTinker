apply plugin: 'com.android.application'
apply from: 'tinker-support.gradle'


///签名文件的引入
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId "com.xiaoyao.buglytinker"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // 开启multidex
        multiDexEnabled true
        // recommend
        dexOptions {
            jumboMode = true
        }
    }

    /*sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    } ndk {
        // 设置支持的SO库架构
        abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
    }*/
    // 签名配置
    signingConfigs {
        release {
            try {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all {
                variant ->
                    variant.outputs.all { output ->
                        outputFileName = "app-release.apk"
                    }
            }
        }
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }
}

def releaseTime() {
    return new Date().format("yyyyMMddHHmm")
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "com.android.support:multidex:1.0.1" // 多dex配置
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.6'// 远程仓库集成方式（推荐）
    implementation 'com.tencent.bugly:nativecrashreport:2.2.0'
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.9'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
}
